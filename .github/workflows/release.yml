name: release
on:
  push:
#    tags:
#      - "v[0-9]+.[0-9]+.[0-9]+*"

env:
  REPO: faucet
  ORG: coreumfoundation

jobs:
  ci:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo ::set-output name=release::true
          fi
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+$ ]]; then
              echo ::set-output name=release-candidate::true
          fi
      - name: Release
        if: steps.check-tag.outputs.release == 'true'
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
      - name: Release-candidate
        if: steps.check-tag.outputs.release-candidate == 'true'
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          generate_release_notes: true

      # docker part
      - name: Set variables
        # if git tag is present, set FULL_IMAGE_NAME_WITH_GIT_TAG, else put empty string
        run: |
          echo "SHA8=${GITHUB_SHA::8}" >> $GITHUB_ENV
          
          export FULL_IMAGE_NAME_WITH_GIT_TAG=${{ (startsWith(github.ref, 'refs/tags/') && format('{0}/{1}:{2}', env.ORG, env.REPO, github.ref_name)) || '' }}
          echo "FULL_IMAGE_NAME_WITH_GIT_TAG=$FULL_IMAGE_NAME_WITH_GIT_TAG" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push faucet
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile
          push: true
          # if tag is an empty string, plugin will skip that tag.
          tags: |
            ${{ env.ORG }}/${{ env.REPO }}:latest
            ${{ env.ORG }}/${{ env.REPO }}:${{ env.SHA8 }}
            ${{ env.FULL_IMAGE_NAME_WITH_GIT_TAG }}





