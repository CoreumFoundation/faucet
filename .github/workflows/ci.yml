name: ci
on:
  push:
    branches: [ master ]
    tag:
      - '*'
# - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:

jobs:
  ci:
#    strategy:
#      fail-fast: false
#      matrix:
#        ci_step: ["images" ]
#        include:
#          - ci_step: "lint"
#            command: "crust lint/faucet --log-format=yaml"
#            go-cache: true
#            linter-cache: true
#            docker-cache: false
#          - ci_step: "test"
#            command: "crust test/faucet --log-format=yaml"
#            go-cache: true
#            linter-cache: false
#            docker-cache: false
#          - ci_step: "build"
#            command: "crust build --log-format=yaml"
#            go-cache: true
#            linter-cache: false
#            docker-cache: true
#          - ci_step: "integration tests"
#            command: "crust build/integration-tests images --log-format=yaml && crust znet test --repos=faucet --log-format=yaml"
#            go-cache: true
#            linter-cache: false
#            docker-cache: true
#          - ci_step: "images"
#            command: "crust images/faucet --log-format=yaml"
#            go-cache: true
#            linter-cache: true
#            docker-cache: true
#          - ci_step: "push"
#            command: "docker push --all-tags"
#            go-cache: true
#            linter-cache: true
#            docker-cache: true


    runs-on: ubuntu-22.04
    steps:
      - name: Go version used to build crust tool
        run: go version
      - name: Setup go cache
        uses: actions/cache@v3
        if: ${{ matrix.go-cache }}
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set linter cache
        uses: actions/cache@v3
        if: ${{ matrix.linter-cache }}
        with:
          path: ~/.cache/golangci-lint
          key: ${{ runner.os }}-ci-cache
      - name: Set docker cache
        uses: satackey/action-docker-layer-caching@v0.0.11
        if: ${{ matrix.docker-cache }}
        continue-on-error: true
      - name: Checkout faucet
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          path: faucet
      - name: Checkout crust
        uses: actions/checkout@v3
        with:
          repository: CoreumFoundation/crust
          path: crust
      - name: Set up crust
        run: echo "$(pwd)/crust/bin" >> $GITHUB_PATH
#      - name: Log in to Docker Hub
#        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#      - name: Run ${{ matrix.ci_step }}
#        run: ${{ matrix.command }}
      - name: Release
        uses: ncipollo/release-action@v1
        if: ${{  github.ref_name }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$
        with:
          bodyFile: "body.md"
